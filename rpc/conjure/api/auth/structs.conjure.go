// This file was generated by Conjure and should not be manually edited.

package auth

import (
	"github.com/palantir/pkg/safejson"
	"github.com/palantir/pkg/safeyaml"
)

type LoginRequestV1 struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

func (o LoginRequestV1) MarshalYAML() (interface{}, error) {
	jsonBytes, err := safejson.Marshal(o)
	if err != nil {
		return nil, err
	}
	return safeyaml.JSONtoYAMLMapSlice(jsonBytes)
}

func (o *LoginRequestV1) UnmarshalYAML(unmarshal func(interface{}) error) error {
	jsonBytes, err := safeyaml.UnmarshalerToJSONBytes(unmarshal)
	if err != nil {
		return err
	}
	return safejson.Unmarshal(jsonBytes, *&o)
}

/*
LoginResponseV1 returns an OAuth2 response as defined in
https://oauth.com/oauth2-servers/access-tokens/access-token-response
*/
type LoginResponseV1 struct {
	// Token to be used in subsequent requests.
	AccessToken string `conjure-docs:"Token to be used in subsequent requests." json:"accessToken"`
	// TokenType is the type of token this is. This will always be "bearer".
	TokenType string `conjure-docs:"TokenType is the type of token this is. This will always be \"bearer\"." json:"tokenType"`
	// ExpiresIn is the amount of time in seconds for which the token is valid.
	ExpiresIn int `conjure-docs:"ExpiresIn is the amount of time in seconds for which the token is valid." json:"expiresIn"`
}

func (o LoginResponseV1) MarshalYAML() (interface{}, error) {
	jsonBytes, err := safejson.Marshal(o)
	if err != nil {
		return nil, err
	}
	return safeyaml.JSONtoYAMLMapSlice(jsonBytes)
}

func (o *LoginResponseV1) UnmarshalYAML(unmarshal func(interface{}) error) error {
	jsonBytes, err := safeyaml.UnmarshalerToJSONBytes(unmarshal)
	if err != nil {
		return err
	}
	return safejson.Unmarshal(jsonBytes, *&o)
}
